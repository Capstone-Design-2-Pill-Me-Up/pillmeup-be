# 파일 경로: .github/workflows/main.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feat/setup-cicd

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # 1. 환경 설정 (Java 21)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 2. 빌드 및 테스트 (Gradle 기준)
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build -x test

      # 3. CodeDeploy를 위한 압축 (appspec.yml과 빌드 결과 포함)
      - name: Make zip file
        # CodeDeploy 아티팩트에는 빌드 결과물(jar), appspec.yml, scripts 폴더가 포함되어야 합니다.
        run: zip -r deploy.zip . -x "*\.git*" "*\.github*"

      # 4. AWS 인증
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 5. S3에 아티팩트 업로드
      - name: Upload to S3
        # S3_BUCKET으로 변경된 이름 사용
        run: aws s3 cp deploy.zip s3://${{ secrets.S3_BUCKET }}/deploy/${GITHUB_SHA}.zip

      # 6. CodeDeploy 배포 트리거
      - name: Deploy to EC2 via AWS CodeDeploy
        run: aws deploy create-deployment --application-name ${{ secrets.CODE_DEPLOY_APPLICATION_NAME }} --deployment-group-name ${{ secrets.CODE_DEPLOY_DEPLOYMENT_GROUP }} --s3-location bucket=${{ secrets.S3_BUCKET }},key=deploy/${GITHUB_SHA}.zip,bundleType=zip