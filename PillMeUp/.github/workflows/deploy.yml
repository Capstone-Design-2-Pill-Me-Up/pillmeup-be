name: Spring Boot CI/CD with CodeDeploy (Java 21)

on:
  push:
    branches:
      - feat/setup-cicd

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      # 코드 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v4

      # JDK 21 설정
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      # Gradle 캐싱
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Gradle 빌드 (테스트 제외 가능)
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 빌드 산출물 압축
      - name: Zip build files
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/
          cp appspec.yml deploy/
          cp -r scripts deploy/
          cd deploy && zip -r deploy.zip .

      # AWS CLI 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # S3 업로드
      - name: Upload to S3
        run: |
          aws s3 cp deploy/deploy.zip s3://${{ secrets.S3_BUCKET }}/deploy/deploy.zip

      # CodeDeploy 실행
      - name: Deploy with CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name ${{ secrets.CODEDEPLOY_APPLICATION_NAME }} \
            --deployment-group-name ${{ secrets.CODEDEPLOY_DEPLOYMENT_GROUP }} \
            --s3-location bucket=${{ secrets.S3_BUCKET }},bundleType=zip,key=deploy/deploy.zip \
            --region ${{ secrets.AWS_REGION }}
